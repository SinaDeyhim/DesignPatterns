package gui;
import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;


public class ElevatorApplicationSample extends Application {
	
	private Label[] floors;
	private static final int FLOOR_COUNT=21;
	
	@Override
	public void init() throws Exception {
		
		super.init();
		floors = new Label[FLOOR_COUNT];
		for (int i = 0; i < floors.length; i++) {
			floors[i]= new Label();
			floors[i].setId("empty");
		}
		
	}

	@Override
	public void start(Stage primaryStage) throws Exception {
		GridPane main = new GridPane();
		
		main.add(createElevatorFloors() , 0, 0);
		Scene scene = new Scene (main,Color.LIGHTGRAY);
		scene.getStylesheets().add(ElevatorApplicationSample.class.getResource("elevator.css").toExternalForm());
		primaryStage.setScene(scene);
		primaryStage.setTitle("Elevator Simulator");
		primaryStage.show();
		
	}
	
	private GridPane createElevatorFloors() {
		GridPane floorPane = new GridPane();
		for (int i = floors.length-1; i >0; i--) {
			floorPane.add(floors[i], 0,(floors.length-1)-i);
		}
		return floorPane;
	}
	
	
	@Override
	public void stop() throws Exception {
		// TODO Auto-generated method stub
		super.stop();
	}
	
	private class ElevatorAnimator extends AnimationTimer{

		@Override
		public void handle(long now) {
			// TODO Auto-generated method stub
			
		}
		
	}
	
	public static void main(String[] args) {
		launch(args);
	}
	
	
	
	

}
