package elevator;

import elevatorsystem.ElevatorPanel;

public class ElevatorImp implements Elevator {
	private int POWER_START_STOP=2;
	private int POWER_CONTINUOUS=1;
	private long SLEEP_START_STOP=25;
	private long SLEEP_CONTINUOUS=25;
	private int MAX_CAPACITY_PERSONS;
	private double powerUsed;
	private int currentFloor=0;
	private int capacity;
	private ElevatorPanel panel;
	private MovingState state;
	
	
	//elevator constructor. changed the max_capacity to int
	public ElevatorImp(int MAX_CAPACITY_PERSONS, ElevatorPanel panel) {
		this.MAX_CAPACITY_PERSONS=MAX_CAPACITY_PERSONS;
		this.panel=panel;
	}
	
	//move elevator
	@Override
	public void moveTo(int floor) {
		setCurrentFloor(floor);
		
	}
	
	
	private void processMovingState(int floor) {
		
	}

	
	@Override
	public int getCapacity() {
		return capacity;
	}

	@Override
	public boolean isFull() {
		return capacity==0;
	}

	@Override
	public boolean isEmpty() {
		return capacity==MAX_CAPACITY_PERSONS;
	}

	@Override
	public MovingState getState() {
		return state;
	}

	@Override
	public double getPowerConsumed() {
		return powerUsed;
	}

	@Override
	public int getFloor() {
		return currentFloor;
	}

	@Override
	public void addPersons(int persons) {
		if (getCapacity()>=persons) {
			capacity-=persons;
		}else {
			 System.out.println("There is not enough room in the elevator");
		}
		
	}

	@Override
	public void requestStop(int floor) {
		// TODO Auto-generated method stub
		
	}
	
	public void setCurrentFloor(int floor) {
		this.currentFloor=floor;
	}
	

}
